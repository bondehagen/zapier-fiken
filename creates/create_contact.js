const perform = (z, bundle) => {
  const options = {
    url: `https://api.fiken.no/api/v2/companies/${bundle.inputData.slug}/contacts`,
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      Accept: 'application/json',
      Authorization: `Bearer ${bundle.authData.access_token}`,
      'X-ADDRESS': bundle.inputData.address,
      'X-SLUG': bundle.inputData.slug,
    },
    params: {},
    body: {
      slug: bundle.inputData.slug,
      name: bundle.inputData.name,
      address: {
        streetAddress: bundle.inputData.streetAddress,
        city: bundle.inputData.city,
        postCode: bundle.inputData.postCode,
        country: bundle.inputData.country,
      },
      organizationNumber: bundle.inputData.organizationNumber,
      email: bundle.inputData.email,
      phoneNumber: bundle.inputData.phoneNumber,
      customer: bundle.inputData.customer,
      memberNumber: bundle.inputData.memberNumber,
    },
  };

  return z.request(options).then((response) => {
    response.throwForStatus();
    const results = response.json;

    z.console.log('Result', results);
    return results || {};
  });
};

module.exports = {
  operation: {
    perform: perform,
    inputFields: [
      {
        key: 'slug',
        label: 'Company',
        type: 'string',
        helpText: 'Retrieves all contacts for the specified company.',
        dynamic: 'get_companies.slug.slug',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'name',
        label: 'Contact Name',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'streetAddress',
        label: 'Address',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'city',
        label: 'City',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'postCode',
        label: 'Post Code',
        type: 'string',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'country',
        label: 'Country',
        type: 'string',
        default: 'Norge',
        required: true,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'organizationNumber',
        label: 'Company reg number',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'email',
        label: 'E-mail',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'phoneNumber',
        label: 'Phone',
        type: 'string',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'customer',
        label: 'Customer?',
        type: 'boolean',
        default: 'true',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
      {
        key: 'memberNumber',
        label: 'Member ID',
        type: 'number',
        required: false,
        list: false,
        altersDynamicFields: false,
      },
    ],
    sample: {
      lastModifiedDate: {},
      name: 'Fiken AS',
      email: 'kontakt@fiken.gmail',
      organizationNumber: 913312465,
      phoneNumber: 62158537,
      memberNumber: 5464,
      customer: false,
      supplier: false,
      contactPerson: [
        {
          name: 'Betty Boop',
          email: 'bb@gmail.com',
          phoneNumber: 98573564,
          address: {
            streetAddress: 'Karl Johan 34',
            city: 'Oslo',
            postCode: 360,
            country: 'Norway',
          },
        },
      ],
      currency: 'NOK',
      language: 'Norwegian',
      inactive: true,
      daysUntilInvoicingDueDate: 15,
      address: {
        streetAddress: 'Karl Johan 34',
        city: 'Oslo',
        postCode: 360,
        country: 'Norway',
      },
      groups: ['string'],
    },
    outputFields: [
      { key: 'name', label: 'Name' },
      { key: 'email', label: 'E-mail' },
      { key: 'organizationNumber', label: 'Org. reg. no' },
      { key: 'phoneNumber' },
      { key: 'memberNumber', type: 'number' },
      { key: 'customer', type: 'boolean' },
      { key: 'supplier', type: 'boolean' },
      { key: 'contactPerson[]name' },
      { key: 'contactPerson[]email' },
      { key: 'contactPerson[]phoneNumber' },
      { key: 'contactPerson[]address__streetAddress' },
      { key: 'contactPerson[]address__city' },
      { key: 'contactPerson[]address__postCode' },
      { key: 'contactPerson[]address__country' },
      { key: 'currency' },
      { key: 'language' },
      { key: 'inactive', type: 'boolean' },
      { key: 'daysUntilInvoicingDueDate', type: 'integer' },
      { key: 'address__streetAddress' },
      { key: 'address__city' },
      { key: 'address__postCode' },
      { key: 'address__country' },
      { key: 'groups[]0' },
      { key: 'groups[]1' },
      { key: 'groups[]2' },
      { key: 'groups[]3' },
      { key: 'groups[]4' },
      { key: 'groups[]5' },
    ],
  },
  key: 'create_contact',
  noun: 'Contact',
  display: {
    label: 'Create Contact',
    description:
      'Creates a new contact. The Location response header returns the URL of the newly created contact.',
    hidden: false,
    important: true,
  },
};
